[build-system]
requires = ["setuptools", "versioningit"]
build-backend = "setuptools.build_meta"

# Self-descriptive entries which should always be present
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
[project]
name = "openxps"
description = "Extended Phase-Space Simulations with OpenMM"
dynamic = ["version"]
readme = "README.md"
authors = [
    { name = "Charlles Abreu", email = "craabreu@gmail.com" }
]
license = { text = "MIT" }
# See https://pypi.org/classifiers/
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
# Declare any run-time dependencies that should be installed with the package.
dependencies = [
    "cvpack",
    "numpy",
    "openmm",
    "pyyaml",
]

# Update the urls once the hosting is set up.
#[project.urls]
#"Source" = "https://github.com/<username>/openxps/"
#"Documentation" = "https://openxps.readthedocs.io/"

[project.optional-dependencies]
test = [
  "pytest>=6.1.2",
  "pytest-runner"
]

[tool.setuptools]
# This subkey is a beta stage development and keys may change in the future, see https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html for more details
#
# As of version 0.971, mypy does not support type checking of installed zipped
# packages (because it does not actually import the Python packages).
# We declare the package not-zip-safe so that our type hints are also available
# when checking client code that uses our (installed) package.
# Ref:
# https://mypy.readthedocs.io/en/stable/installed_packages.html?highlight=zip#using-installed-packages-with-mypy-pep-561
zip-safe = false
# Let setuptools discover the package in the current directory,
# but be explicit about non-Python files.
# See also:
#   https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration
# Note that behavior is currently evolving with respect to how to interpret the
# "data" and "tests" subdirectories. As of setuptools 63, both are automatically
# included if namespaces is true (default), even if the package is named explicitly
# (instead of using 'find'). With 'find', the 'tests' subpackage is discovered
# recursively because of its __init__.py file, but the data subdirectory is excluded
# with include-package-data = false and namespaces = false.
include-package-data = false
[tool.setuptools.packages.find]
namespaces = false
where = ["."]

# Ref https://setuptools.pypa.io/en/latest/userguide/datafiles.html#package-data
[tool.setuptools.package-data]
openxps = [
    "py.typed",
    "data/*.csv"
]

[tool.versioningit]
default-version = "0+unknown"

[tool.versioningit.format]
distance = "{base_version}+{distance}.{vcs}{rev}"
dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
distance-dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"

[tool.versioningit.vcs]
# The method key:
method = "git"  # <- The method name
# Parameters to pass to the method:
match = ["v*"]
default-tag = "0.0.0"

[tool.versioningit.write]
file = "openxps/_version.py"

[tool.ruff]
line-length = 88
extend-exclude = ["_version.py"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "PL",   # pylint
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
]
# Note: E203 and W503 are not needed - ruff is compatible with black formatting by default

[tool.ruff.lint.pylint]
max-locals = 15
max-args = 6  # Allow up to 6 arguments in function definitions

[tool.ruff.lint.pep8-naming]
# Allow camelCase method names for OpenMM compatibility
classmethod-decorators = ["classmethod"]
staticmethod-decorators = ["staticmethod"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-v -ra --doctest-modules --cov=openxps --cov-report=term --cov-report=html"
testpaths = ["openxps"]
